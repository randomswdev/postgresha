---
- name: Update and reboot all the systems
  hosts: all
  become: true
  tasks:
  - name: Update all package
    yum:
      name: "*"
      state: latest
    register: update_result
  - name: Reboot the systems
    reboot:
    when: update_result.changed

- name: Install Consul
  hosts: consul_instances
  any_errors_fatal: true
  become: true
  become_user: root
  roles:
  - brianshumate.consul

- name: Install Patroni
  hosts: postgres
  become: true
  pre_tasks:
  - name: "Disable the postgresql:{{ patroni_postgresql_version }} stream"
    shell:
      cmd: "dnf module disable -y postgresql:{{ patroni_postgresql_version }}"
      warn: false
  - name: Install pip3
    yum:
      name: python3-pip
      state: present
  - name: Remove the psycopg2 package (conflicts with patronictl)
    pip:
      name: psycopg2
      state: absent
  - name: Install the psycopg2-binary package (to replace the previous one)
    pip:
      name: psycopg2-binary
      state: present

  - name: Create common entries of the pg_hba list
    set_fact:
      patroni_bootstrap_dcs_postgresql_pg_hba:
      - type: "local"
        database: "all"
        user: "all"
        method: "trust"
      - type: "host"
        database: "all"
        user: "all"
        address: "0.0.0.0/0"
        method: "password"
      - type: "local"
        database: "replication"
        user: "{{ patroni_replication_username }}"
        method: "trust"
      - type: "host"
        database: "replication"
        user: "{{ patroni_replication_username }}"
        address: "127.0.0.1/32"
        method: "password"      
  - name: Create the pg_hba list
    with_items: "{{groups['postgres']}}"
    set_fact:
      patroni_bootstrap_dcs_postgresql_pg_hba: "{{ patroni_bootstrap_dcs_postgresql_pg_hba|default([]) + [ pg_hba_line ] }}"
    vars:
      pg_hba_line:
        type:  "host"
        database: "replication"
        user: "{{ patroni_replication_username }}"
        address: '{{ hostvars[item]["ansible_" + service_iface]["ipv4"]["address"]}}/32'
        method: "password"        

  - name: Create the user list
    with_items: "{{groups['postgres']}}"
    set_fact:
      patroni_bootstrap_users:
      - { name: "{{ patroni_superuser_username }}",   password: "{{ patroni_superuser_password }}",   options: [] }
      - { name: "{{ patroni_replication_username }}", password: "{{ patroni_replication_password }}", options: ['replication','createrole','createdb'] }
  
  roles:
  - kostiantyn-nemchenko.patroni

- name: Setup HA proxy
  hosts: services
  become: true
  tasks:
  - name: Install HA proxy and various tools
    yum:
      name:
      - haproxy
      - libsemanage-python
      state: present
  - name: Create the HA proxy config file
    template:
      src: templates/haproxy.cfg.j2
      dest: /etc/haproxy/haproxy.cfg
  - name: Configure selinux
    seboolean:
      name: haproxy_connect_any
      state: yes
      persistent: yes
  - name: Start HA proxy
    service:
      name: haproxy
      enabled: true
      state: restarted

- name: Preparing postgres benchmark
  hosts: services
  become: true
  tasks:
  - name: Install pgbench
    yum:
      name:
      - postgresql-contrib
      state: present
  - name: Output usage information
    debug:
      msg:
      - "****************************************************************************"
      - "Run the tests using the following commands:"
      - "pgbench -i -s 50 -h {{hostvars[groups['services'][0]]['ansible_' + service_iface]['ipv4']['address']}} -U {{hostvars[groups['postgres'][0]]['patroni_superuser_username']}}"
      - "pgbench -c 10 -j 2 -t 10000 -h {{hostvars[groups['services'][0]]['ansible_' + service_iface]['ipv4']['address']}} -U {{hostvars[groups['postgres'][0]]['patroni_superuser_username']}}"
      - ""
      - "When prompted for the password, once ofr each command, enter:"
      - "{{hostvars[groups['postgres'][0]]['patroni_superuser_password']}}"
      - ""
      - "Monitor haproxy statistics at:"
      - "http://{{hostvars[groups['services'][0]]['ansible_' + service_iface]['ipv4']['address']}}:7000"
      - ""
      - "While running the test, if you stop the leader, the test fails. If you stop"
      - "a replica, the test continues."
      - "****************************************************************************"
